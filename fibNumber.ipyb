{
 "metadata": {
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.9-final"
  },
  "orig_nbformat": 2,
  "kernelspec": {
   "name": "python36964bit387f029430874b0db6bacfe5b46bd9d1",
   "display_name": "Python 3.6.9 64-bit"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2,
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "#aproach 1 iterartive time O(n) , space O(1)\n",
    "\n",
    "def getNthFib(n):\n",
    "    # Write your code here.\n",
    "    hold = 0\n",
    "    A = [0,1]\n",
    "\n",
    "    if n == 2:\n",
    "        return 1\n",
    "\n",
    "    if n == 1:\n",
    "\t    return 0\n",
    "\n",
    "    for i in range(1,n-1):\n",
    "        n = A[-1] + A[0]\n",
    "        A[0] = A[-1]\n",
    "        A[-1] = n\n",
    "    \n",
    "    return n\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": "5"
     },
     "metadata": {},
     "execution_count": 92
    }
   ],
   "source": [
    "getNthFib(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [],
   "source": [
    "#aproach 2 iterartive time O(n) , space O(1)\n",
    "\n",
    "def getNthFib2(n):\n",
    "    # Write your code here.\n",
    "    A = [0,1]\n",
    "    counter = 3 # third fib to find\n",
    "\n",
    "    if n == 2:\n",
    "        return 1\n",
    "\n",
    "    if n == 1:\n",
    "\t    return 0\n",
    "\n",
    "    while counter <= n :\n",
    "        nextfib = A[-1] + A[0]\n",
    "        A[0] = A[-1]\n",
    "        A[-1] = nextfib\n",
    "        counter += 1\n",
    "    \n",
    "    return n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": "5"
     },
     "metadata": {},
     "execution_count": 96
    }
   ],
   "source": [
    "getNthFib2(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ]
}